<?php

function homehead_preprocess_page(&$vars){
	
	global $_domain;
  global $language;

	if($vars['is_front']==TRUE && $_domain['domain_id']==0){

		if(!isset($vars['homehead'])){
			
			$cached_data = variable_get('homehead_cached_data_'.$language->language, array());

			if(count($cached_data)<=0){
				homehead_majcacheddata($cached_data);
				
			}//fin if
			
			if(count($cached_data)>0){
				$vars['homehead'] = theme_homehead($cached_data['first_image'], $cached_data['image_to_load']);
				if($cached_data['coups_coeur'])
					$vars['homehead'] .= theme('homehead-coup-coeur', t('Favorite'), $cached_data['coups_coeur']);
			}
		
		}//Fin if isset $vars homehead
		
		
		
	}
	
}

function homehead_majcacheddata(&$cached_data){
  global $language;
	$res = db_query("SELECT nid FROM {node} WHERE type='%s' AND status=1 AND (language='' OR language='%s') ORDER BY created DESC", 'enete_accueil', $language->language);
	$items = array();
	while($fetch = db_fetch_array($res)){
		$items[] = $fetch['nid'];
	}
	
	//On place la première image à part
	$firstImage = FALSE;
	
	if(count($items)>0){
		$n = node_load($items[0]);
		$firstImage = theme_homeheaditem($n->field_fronthead_img[0]['filepath'], $n->field_fronthead_text1[0]['value'], $n->field_fronthead_text2[0]['value']);
	}
	
	$imagesToLoad = array();
	for($i=1; $i<count($items);$i++){
		$n = node_load($items[$i]);
		$imagesToLoad[]='<li><span class="url">'.imagecache_create_url('home_header', $n->field_fronthead_img[0]['filepath']).'</span><span class="text1">'.$n->field_fronthead_text1[0]['value'].'</span><span class="text2">'.$n->field_fronthead_text2[0]['value'].'</span></li>';
	}
	
	if(!$firstImage){
		$firstImage = '<li><img src="'.drupal_get_path('theme', 'cdt2011').'/images/image-home-default.png"/></li>';
	}
	
	$coups_de_coeur=FALSE;
	if($v = views_get_view('home_coups_de_coeur')){
		
		$coups_de_coeur = $v->execute_display('default');
	}
	
	$cached_data = array('first_image'=>$firstImage, 'image_to_load'=>$imagesToLoad, 'coups_coeur'=>$coups_de_coeur);
	
	variable_set('homehead_cached_data_'.$language->language, $cached_data);
	
}


/**
 * Implementation of hook_theme().
 */
function homehead_theme($existing, $type, $theme, $path) {
  return array(
    'homehead-back-item' => array(
      'arguments' => array('image' => NULL, 'text1' => NULL, 'text2'=>NULL),
      'template' => 'homehead-back-item',
    ),
    'homehead-back' => array(
      'arguments' => array('first' => NULL, 'items' => NULL),
      'template' => 'homehead-back',
    ),
    'homehead-coup-coeur' => array(
      'arguments' => array('title'=>t('Favorite'), 'content' => NULL),
      'template' => 'homehead-coup-coeur',
    ),
  );
}


function theme_homeheaditem($image_path, $text1, $text2){
	$img = theme('imagecache', 'home_header', $image_path);
	return theme('homehead-back-item', $img, $text1, $text2);
}

function theme_homehead($first, $toload=array()){
	return theme('homehead-back', $first, $toload);
}

/**
 * Réactualise le cache à la sauvegarde d'un node pouvant être référencé
 */
function homehead_nodeapi(&$node, $op, $a3=null, $a4=null){
	$types = array('enete_accueil', 'bon_plan');

	if(in_array($node->type, $types) && ($op=='insert' || $op=='update' || $op=='delete')){
    if(!$node->language){
      $languages = language_list('language');
      foreach($languages as $language){
  	  	variable_del('homehead_cached_data_'.$language->language);
      }
    }else{
  		variable_del('homehead_cached_data_'.$node->language);
    }
  }
}

/**
 * Réactualise le cache au cron
 */
function homehead_cron(){
	//variable_del('homehead_cached_data');
}




