<?php
function cdtsearch_perm(){
	return array('Administer flux search form');
}
function get_searchfieldtypes(){
	return array('yesno' => 'Yes / No', 'combo' => 'Select one', 'autocomplete' => 'Autocomplete field', 'multi'=>'Multiselect');
}

/**
 * Implementation of hook_menu().
 */
function cdtsearch_menu() {
  $items = array();

  $items['admin/settings/flux/cdtsearch'] = array(
    'title' => 'Flux search',
    'type' => MENU_LOCAL_TASK,
    'page callback' => 'cdtsearch_settings_main',
    'access arguments' => array('Administer flux search form'),
  );
  
  $items['admin/settings/flux/cdtsearch/%'] = array(
    'title' => 'Flux search',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cdtsearch_searchform_settings_form', 4),
    'access arguments' => array('Administer flux search form'),
  );
  
  $items['recherche-fiche/%'] = array(
    'page callback' => 'cdtsearch_fluxsearchpage',
    'page arguments' => array(1),
    'access callback' => TRUE,
  );
  return $items;
}

function cdtsearch_fluxsearchpage($fluxnid){
	return '';	
}
function cdtsearch_flux_search_form($form_state, $fluxnid){

	$infos = load_flux_taxo_infos($fluxnid);
	$conf = getFluxSearchFieldConf($fluxnid);
	
	$form=array();
	
	foreach($conf as $key => $item){
		
		$term = taxonomy_get_term($item->tid);
		
		switch($item->fieldtype){
			case 'yesno':
				$form['field_'.$item->tid] = array(
					'#type' => 'checkbox',
					'#title' => t($item->label),
					'#default_value' => $item->default_value,
					'#weight' => $item->weight,
				);
			break;
			case 'combo' :
				$form['field_'.$item->tid] = array(
					'#type' => 'select',
					'#title' => t($item->label),
					'#default_value' => $item->default_value,
					'#options' => array(),
					'#weight' => $item->weight,
				);
				
				$terms = taxonomy_get_tree((int) $term->vid, $item->tid, 2, 3);
				
				$form['field_'.$item->tid]['#options']=array();
				foreach($terms as $termoption){
					$form['field_'.$item->tid]['#options'][$termoption->tid]=$termoption->name;
				}
				
			break;
		}
	}//Fin foreach($conf
	
	$form['submit'] = array(
		'#type' => 'submit',
		'#value' => t('Search'),
	);
	
	return $form;
}
function cdtsearch_flux_search_form_validate($form, &$form_state){

}
function cdtsearch_flux_search_form_submit($form, &$form_state){

}

/* -------------------- PARAMETRAGE -----------------------*/
function cdtsearch_settings_main(){
	$out='';
	
	$out.='<ul>';
	$fluxInfos=loadFluxInfos();
	dsm($fluxInfos);
	foreach($fluxInfos as $nid=>$flux){
		$out.='<li>'.l('Edit search on '.$flux->title, 'admin/settings/flux/cdtsearch/'.$nid).'</li>';
	}
	$out.='</ul>';
	return $out;
}

function cdtsearch_searchform_settings_form($form_state, $fluxnid){
	
	$form = array();
	
	$infos = load_flux_taxo_infos($fluxnid);
	
	$form['fluxnid']=array(
		'#type' => 'hidden',
		'#value' => $fluxnid,
	);
	
	$conf = getFluxSearchFieldConf($fluxnid);
	
	$type_vocs = taxonomy_get_vocabularies('flux_'.$infos->identifiant);
	
	
	if($infos->voc){
		
		$fluxterm = NULL;
		$flux_terms = taxonomy_get_term_by_name($infos->title);
		
		if(is_array($flux_terms) && count($flux_terms)>0){
			foreach($flux_terms as $tid => $term){
				$v = taxonomy_vocabulary_load($term->vid);
				if($v->vid==$infos->voc->vid){
					$fluxterm = $term;
					break;
				}
			}
		}
		
		if($fluxterm){
			
			$fields = taxonomy_get_tree((int) $infos->voc->vid, $fluxterm->tid, 1, 3);
			
			if(is_array($fields) && count($fields)>0){
				
				$tids = array();
			
				foreach($fields as $term){
					
					$tids[]=$term->tid;
				
					$form['field_'.$term->tid] = array(
						'#type' => 'fieldset',
						'#title' => $term->name,
						'#collapsible' => TRUE,
						'#collapsed' => TRUE,
					);
					
					$form['field_'.$term->tid]['label_'.$term->tid] = array(
						'#type' => 'textfield',
						'#title' => 'Form item label',
					);
					
					$form['field_'.$term->tid]['type_'.$term->tid] = array(
						'#type' => 'radios',
						'#title' => 'field type',
						'#options' => array('<none>' => '-None-'),
						'#default_value' => '<none>',
					);
					$form['field_'.$term->tid]['type_'.$term->tid]['#options'] = array_merge($form['field_'.$term->tid]['type_'.$term->tid]['#options'], get_searchfieldtypes());
					
					$form['field_'.$term->tid]['weight_'.$term->tid] = array(
						'#type' => 'weight',
						'#title' => 'Weight',
						'#delta' => 20, 
						'#default_value' => 0,
					);
				}
				
				$form['tids']=array(
					'#type' => 'hidden',
					'#value' => serialize($tids),
				);
			}
		}
		
		if(is_array($conf) && count($conf)>0){
			foreach($conf as $tid=>$confitem){
				$form['field_'.$confitem->tid]['label_'.$confitem->tid]['#default_value']=$confitem->label;
				$form['field_'.$confitem->tid]['type_'.$confitem->tid]['#default_value']=$confitem->fieldtype;
				$form['field_'.$confitem->tid]['weight_'.$confitem->tid]['#default_value']=$confitem->weight;
			}
		}
		
		$form['submit'] = array(
			'#type' => 'submit',
			'#value' => t('Submit'),
		);
		
		return $form;
	}
	
	
	
	return $form;
}

function cdtsearch_searchform_settings_form_submit($form, &$form_state){
	$vals = $form_state['values'];
	$fluxnid = $vals['fluxnid'];
	
	$flux = node_load($fluxnid);
	$tids = unserialize($vals['tids']);
	
	foreach($tids as $tid){
		
		$label = $vals['label_'.$tid];
		$type = $vals['type_'.$tid];
		$weight = $vals['weight_'.$tid];
		
		$nb = db_result(db_query("SELECT count(*) FROM {cdtsearch_fieldsettings} WHERE tid=%d", $tid));
		
		if($nb<=0 && $type!='<none>'){
		
			db_query("INSERT INTO {cdtsearch_fieldsettings} (fluxnid, tid, label, fieldtype, weight) VALUES (%d, %d, '%s', '%s', %d)", $fluxnid, $tid, $label, $type, $weight);
		
		}elseif($nb>0 && $type!='<none>'){
		
			db_query("UPDATE {cdtsearch_fieldsettings} SET label='%s', fieldtype='%s', weight=%d WHERE tid=%d", $label, $type, $weight, $tid);
		
		}elseif($nb>0){
		
			db_query("DELETE FROM {cdtsearch_fieldsettings} WHERE tid=%d", $tid);
		
		}
		
	}
}

function getFluxSearchFieldConf($fluxnid){
	$res = db_query("SELECT * FROM {cdtsearch_fieldsettings} WHERE fluxnid=%d ORDER BY weight ASC", $fluxnid);
	$searchFieldsConf = array();
	while($item = db_fetch_object($res)){
		$searchFieldsConf[$item->tid] = $item;
	}
	return $searchFieldsConf;
}

function load_flux_taxo_infos($fluxnid){

	$res=db_query("SELECT ct.field_flux_identifiant_value AS identifiant, ct.field_flux_idmodule_value AS idmodule, n.title AS title FROM {content_type_flux} AS ct LEFT JOIN {node} AS n ON n.nid=ct.nid 	WHERE ct.nid=%d", $fluxnid);
	
	$infos = db_fetch_object($res);
	
	$type_vocs = taxonomy_get_vocabularies('flux_'.$infos->identifiant);
	
	foreach($type_vocs as $vid => $curvoc){
		if($curvoc->name=='Tourinsoft_'.$infos->identifiant){
			$infos->voc = $curvoc;
			break;
		}
	}
	return $infos;
}
