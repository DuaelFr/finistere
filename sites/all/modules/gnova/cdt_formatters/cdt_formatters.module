<?php

function cdt_formatters_field_formatter_info() {
  $formatters = array(
    'bpimages' => array(
      'label' => t('Active thumdails multi image field'),
      'field types' => array('filefield'),
      'description' => t('Create an image with active thumdails below'),
      'multiple values' => CONTENT_HANDLE_MODULE,
    ),
    'multitextcomma' => array(
      'label' => t('Comma separated'),
      'field types' => array('text'),
      'description' => t('separate each values by a comma'),
      'multiple values' => CONTENT_HANDLE_MODULE,
    ),
    'multimaillinkcomma' => array(
      'label' => t('Comma separated MAIL LINK'),
      'field types' => array('text'),
      'description' => t('separate each mail by a comma surround by link'),
      'multiple values' => CONTENT_HANDLE_MODULE,
    ),
    'multitextrb' => array(
      'label' => t('BR separated'),
      'field types' => array('text'),
      'description' => t('separate each values by a br'),
      'multiple values' => CONTENT_HANDLE_MODULE,
    ),
    'multilinkbr' => array(
      'label' => t('BR separated LINK'),
      'field types' => array('text'),
      'description' => t('separate each link by a br'),
      'multiple values' => CONTENT_HANDLE_MODULE,
    ),
    'vignettesprofil' => array(
      'label' => t('Vignettes profil'),
      'field types' => array('text'),
      'description' => t('Separate each word by - and add tag and class'),
      'multiple values' => CONTENT_HANDLE_MODULE,
    ),
    'begintoenddate' => array(
      'label' => t('Du ... au ...'),
      'field types' => array('date'),
      'description' => t('A UTILISER SUR LE CHAMP DATE DU DEBUT SEULEMENT - Formatte sous la forme "Du x au y SELON LE NODE TYPE"'),
      'multiple values' => CONTENT_HANDLE_MODULE
	  ),
    'hidefalse' => array(
      'label' => t("Doesn't display false"),
      'field types' => array('text'),
      'description' => t('Permet de ne pas afficher le champ si la valeur est à non'),
      'multiple values' => CONTENT_HANDLE_MODULE
	  ),
    'resaligne' => array(
      'label' => t("COORD_TELECOM_RESA"),
      'field types' => array('text'),
      'description' => t('Affichage du lien réservation en ligne sous conditions'),
      'multiple values' => CONTENT_HANDLE_MODULE
	  ),
    'copylabel' => array(
      'label' => t("Copy label"),
      'field types' => array('text'),
      'description' => t('Copie le label dans la valeur si le champ n\'est pas vide (ou \'non\')'),
      'multiple values' => CONTENT_HANDLE_MODULE
    ),
  );
  return $formatters;
}

function cdt_formatters_theme() {
  $theme = array(
    'cdt_formatters_formatter_bpimages' => array('arguments' => array('element' => NULL),),
    'cdt_formatters_formatter_multitextcomma' => array('arguments' => array('element' => NULL),),
    'cdt_formatters_formatter_multimaillinkcomma' => array('arguments' => array('element' => NULL),),
    'cdt_formatters_formatter_multitextbr' => array('arguments' => array('element' => NULL),),
    'cdt_formatters_formatter_multilinkbr' => array('arguments' => array('element' => NULL),),
    'cdt_formatters_formatter_vignettesprofil' => array('arguments' => array('element' => NULL),),
    'cdt_formatters_formatter_begintoenddate' => array('arguments' => array('element' => NULL),),
    'cdt_formatters_formatter_hidefalse' => array('arguments' => array('element' => NULL),),
    'cdt_formatters_formatter_resaligne' => array('arguments' => array('element' => NULL),),
    'cdt_formatters_formatter_copylabel' => array('arguments' => array('element' => NULL),),
  );
  return $theme;
}

function theme_cdt_formatters_formatter_begintoenddate($element) {
	$output = '';
	$node = $element['#node'];
	if (count($element) > 0) {
		for($i=0; $i<count($element) && isset($element[$i]['#item']); $i++){
      $beginDate = '';
      $endDate = '';

			$arGen = explode('T',$element[$i]['#item']['value']);
			$arrayDate = explode('-',$arGen[0]);
      if(sizeof($arrayDate) == 3){
  			$beginDate = $arrayDate[2].'/'.$arrayDate[1].'/'.$arrayDate[0];
      }
      
      if(isset($node->field_fl_date_fin_date)){
        $datefin = $node->field_fl_date_fin_date;
      }elseif(isset($node->field_fl_date_fin_borne_date)){
        $datefin = $node->field_fl_date_fin_borne_date;
      }
      
      if(isset($datefin)){
        $sarGen = explode('T',$datefin[$i]['value']);
        $sarrayDate = explode('-',$sarGen[0]);
        if(sizeof($sarrayDate) == 3){
          $endDate = $sarrayDate[2].'/'.$sarrayDate[1].'/'.$sarrayDate[0];
        }
      }

      if(!empty($beginDate) && !empty($endDate)){
        if($beginDate == $endDate){
  			  $output.='<div class="field-item"><div class="date-display-single">'.t('On @from', array('@from'=>$beginDate)) . '</div></div>';
        }else{
  			  $output.='<div class="field-item"><div class="date-display-single">'.t('From @from to @to', array('@from'=>$beginDate, '@to'=>$endDate)) . '</div></div>';
        }
      }elseif(!empty($beginDate)){
  			$output.='<div class="field-item"><div class="date-display-single">'.t('From @datefrom', array('@datefrom'=>$beginDate)) . '</div></div>';
      }elseif(!empty($endDate)){
  			$output.='<div class="field-item"><div class="date-display-single">'.t('To @dateto', array('@dateto'=>$endDate)) . '</div></div>';
      }
		}
	}
	return $output;
}

function theme_cdt_formatters_formatter_bpimages($element) {
  //dsm($element);
  $output = '';

  $img='';

  	
	$tiny_imgs = array();
	
	if(count($element)>0 && isset($element[0]['#item']['fid'])){
		$count = count(element_children($element));

		for($i=0; $i < $count; $i++){
			if(isset($element[$i]['#item']['fid'])){
				$item = $element[$i]['#item'];
				$img.='<a class="lien_img colorbox-load" href="'.base_path().$item['filepath'].'">'.theme('imagecache', 'bp_detail_big', $item['filepath'], $item['data']['alt'], $item['data']['title']).'</a>';
				$tiny_imgs[] = '<a href="#" '.($i==0 ? 'class="current"' : '').'>'.theme('imagecache', 'bp_tiny_img', $item['filepath'], $item['data']['alt'], $item['data']['title']).'</a>';
        //dsm($i % 4);
			}
		}
		
		$output.= $img;
		if(isset($element[1])){
			$output .= '<ul class="g-tabs">';
			//for($i=0; $i < $count; $i++){
      for($i=0; $i < 12; $i++){
				$item = $tiny_imgs[$i];
				$class='';
        /*
				if($i==0)
					$class = 'first';
				elseif($i+1>=count($tiny_imgs))
					$class = 'last';
          */
        if ($i%4 == 0) {
          $class = 'first';
        }
        if ($i%4 == 3 || $i == $count-1) {
          $class = 'last';
        }
				$output.= '<li class="'.$class.'">'.$item.'</li>';
			}
			$output .= '</ul>';
		}
		
	}
  
  return $output;
}

function theme_cdt_formatters_formatter_multitextcomma($element){
	$output = '';
	if(count($element)>0 && isset($element[0]['#item']['value'])){
		for($i=0; $i<count($element); $i++){
			$item = $element[$i];
			if($item['#item']['value'] && strlen(trim($item['#item']['value']))>0){
        $item['#item']['value'] = str_replace('#', ',', $item['#item']['value']);
				$output.=($i<count($element) && strlen($element[$i+1]['#item']['value'])>0 ? $item['#item']['value'].', ' : $item['#item']['value']);
			}
		}
	}
	return $output;
}

function theme_cdt_formatters_formatter_multimaillinkcomma($element){
	$output = '';
	if(count($element)>0 && isset($element[0]['#item']['value'])){
		for($i=0; $i<count($element); $i++){
			$item = $element[$i];
			if($item['#item']['value'] && strlen(trim($item['#item']['value']))>0){
        $output .= l($item['#item']['value'], 'mailto:'.$item['#item']['value'],array(absolute => TRUE, 'attributes'=>array('class'=>'multimaillinkcomma')));
				$output.=($i<count($element) && strlen($element[$i+1]['#item']['value'])>0 ? ', ' : '');
			}
		}
	}
	return $output;
}

function theme_cdt_formatters_formatter_multitextbr($element){
	$output = '';
	if(count($element)>0 && isset($element[0]['#item']['value'])){
		$output.='<br/>';
		for($i=0; $i<count($element); $i++){
			$item = $element[$i];
			if($item['#item']['value'] && strlen(trim($item['#item']['value']))>0){
				$output.=($i<count($element) && strlen($element[$i+1]['#item']['value'])>0 ? $item['#item']['value'].'<br/>' : $item['#item']['value']);
			}
		}
	}
	return $output;
}

function theme_cdt_formatters_formatter_multilinkbr($element){
	$output = '';
	if(count($element)>0 && isset($element[0]['#item']['value'])){
		for($i=0; $i<count($element); $i++){
			$item = $element[$i];
			if($item['#item']['value'] && strlen(trim($item['#item']['value']))>0){
				$link = $item['#item']['value'];
				if(!preg_match('/^http:\/\//', $link)){
					$link='http://'.$link;
				}
        $text = str_replace('http://', '', $link);
				$output.=($i<count($element) && strlen($element[$i+1]['#item']['value'])>0 ? l($text, $link, array('absolute'=>TRUE, 'attributes'=>array('target'=>'blank'))).'<br/>' : l($text, $link, array('absolute'=>TRUE, 'attributes'=>array('target'=>'blank', 'class'=>'multilinkbr'))));
			}
			
		}
	}
	return $output;
}

function theme_cdt_formatters_formatter_vignettesprofil($element){
	$output = '';
  if(count($element)>0 && isset($element[0]['#item']['value'])){
    module_load_include('inc', 'pathauto', 'pathauto');
    for($i=0; $i<count($element); $i++){
      if(isset($element[$i])){
			  $item = $element[$i];
        if(!empty($item['#item']['value'])){
          $profils = explode('-', $item['#item']['value']);
          foreach($profils as $profil){
            $profil = strip_tags(trim($profil));
            $output .= '<span class="vignettesprofil ' . pathauto_cleanstring($profil) . '">' . $profil . '</span>';
          }
        }
      }else{
        break;
      }
		}
  }
  
	return $output;
}

function theme_cdt_formatters_formatter_hidefalse($element){
	$output = '';

  if(count($element)>0 && isset($element[0]['#item']['value'])){
    for($i=0; $i<count($element); $i++){
      if(isset($element[$i])){
			  $item = $element[$i];
        if(!empty($item['#item']['value'])){
          $output = $item['#item']['value'];
          if($output == 'non' || $output == 'no'){
            return '';
          }
        }
      }else{
        break;
      }
		}
  }

	return $output;
}

function theme_cdt_formatters_formatter_resaligne($element){
	$output = '';
	$node = $element['#node'];
  if(!empty($element[0]['#item']['value']) && (trim($node->field_fixfl_onlineresa[0]['value']) == 'oui' || trim($node->field_fixfl_onlineresa[0]['value']) == 'yes')){
    $output = l(t('Book'), $element[0]['#item']['value'], array('attributes' => array('target' => '_blank')));
  }

	return $output;
}

function theme_cdt_formatters_formatter_copylabel($element){
  $output = theme_cdt_formatters_formatter_hidefalse($element);

  if (!empty($output)) {
    $sql = "SELECT label FROM {flux_fieldsettings} WHERE cckfieldname = '%s'";
    $data = db_fetch_object(db_query($sql, $element['#field_name']));
    if (!empty($data)) {
      $output = $data->label;
    }
  }

  return $output;
}
